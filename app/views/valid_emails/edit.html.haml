- content_for :backtrack do
  %li= link_to raw("#{ValidEmail.model_name.human(:count => :plural)} &rang;"), valid_emails_path
  %li.active= link_to raw(action_icon(:edit, @valid_email.email)), edit_valid_email_path(@valid_email)
- content_for :top_right_menu do
  %li= link_to raw(action_icon(:add, t('phrase.add_resource', :resource => ValidEmail.model_name.human))), new_valid_email_path if can? :create , ValidEmail

.container
  .row
    .span4
      .well.blue
        %h1 Info
    .span8
      .page-header
        %h1 Edit email address
  .row
    .span4
      .alert.alert-error
        %h4 WARNING!
        %p If you remove permissions from yourself, you'll be locked out next time you log in. Be careful.
      %ul
        %li Permissions must be comma separated, and selected from the permissions listed to the right.
        %li Leave the expiration field blank for a non-expiring permission set.
        %li You may enter ONLY ONE email address. If you need to add bulk addresses, #{link_to 'create new entries', new_valid_email_path}.
      = link_to 'Back', valid_emails_path
    .span8
      = form_for @valid_email do |f|
        -if @valid_email.errors.any?
          #error_explanation
            %h2= "#{pluralize(@valid_email.errors.count, "error")} prohibited this valid_email from being saved:"
            %ul
              - @valid_email.errors.full_messages.each do |msg|
                %li= msg
        = f.label :permissions
        = f.text_field :permissions
        %p.help-inline Options: volunteer, staff, admin, moderator
        = f.label 'Expiration'
        = f.text_field :expires_at, :class => 'datepicker'
        %p.help-inline= timeago(@valid_email.expires_at)
        = f.label 'Email address'
        = f.text_field :email, :class => 'span7'
        .form-actions
          = f.submit 'Save'
